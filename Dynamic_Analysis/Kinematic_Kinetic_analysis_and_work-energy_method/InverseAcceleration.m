function InvAcc = InverseAcceleration(x,y,dx,dy,ddx,ddy,L,Theta,dTheta,n_t)

k=[1,2;3,4;5,6;7,8]; %This matrix is for bookkeeping
InvAcc=zeros(n_t,2); %Change this n_t,2*number of config.
L0=L(1);
L1=L(2);

for i = 1  % i=1:4 for all configurations.
    for n = 1:n_t
        
        InvAcc(n,k(i,1)) = 1/(2*L1*(sin(Theta(n,k(i,1)))*(x(n,1) + L0/2)...
            - y(n,1)*cos(Theta(n,k(i,1))))) * (-(4*sin(Theta(n,k(i,1)))...
            *L1*dTheta(n,k(i,1)) + 2*dx(n,1))*dx(n,1)...
            - (-4*cos(Theta(n,k(i,1)))*L1*dTheta(n,k(i,1)) + 2*dy(n,1))*dy(n,1)...
            -(2*L1*dTheta(n,k(i,1))*(cos(Theta(n,k(i,1)))*(x(n,1) + L0/2)...
            + sin(Theta(n,k(i,1)))*y(n,1)))*dTheta(n,k(i,1))...
            - (2*x(n,1) - 2*L1*cos(Theta(n,k(i,1))))*ddx(n,1)...
            - (2*y(n,1) - 2*L1*sin(Theta(n,k(i,1))))*ddy(n,1));

        InvAcc(n,k(i,2)) = 1/(2*L1*(sin(Theta(n,k(i,2)))*(x(n,1) - L0/2)...
            - y(n,1)*cos(Theta(n,k(i,2))))) * (-(4*sin(Theta(n,k(i,2)))...
            *L1*dTheta(n,k(i,2)) + 2*dx(n,1))*dx(n,1)...
            - (-4*cos(Theta(n,k(i,2)))*L1*dTheta(n,k(i,2)) + 2*dy(n,1))*dy(n,1)...
            -(2*L1*dTheta(n,k(i,2))*(cos(Theta(n,k(i,2)))*(x(n,1) - L0/2)...
            + sin(Theta(n,k(i,2)))*y(n,1)))*dTheta(n,k(i,2))...
            - (2*x(n,1) - 2*L1*cos(Theta(n,k(i,2))))*ddx(n,1)...
            - (2*y(n,1) - 2*L1*sin(Theta(n,k(i,2))))*ddy(n,1));
    end
end
